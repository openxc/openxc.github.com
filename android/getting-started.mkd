---
layout: developer
title: Using VI with Android - OpenXC
---

<div class="page-header">
    <h1>Using VI  with Android</h1>
</div>

So you just bought an OpenXC vehicle interface? Let's get it programmed and
test it in a car with your Android device or laptop.
If you have issues at any point in this process, check for similar issues in the
[Google Group](http://groups.google.com/group/openxc) or create a new
post to ask for some assistance.

<h2 class="anchored" id="enabler">
<a href="#enabler">Install the OpenXC Enabler</a>
</h2>

Install the OpenXC Enabler application from [Google
Play](https://play.google.com/store/apps/details?id=com.openxcplatform.enabler){:target="_blank"} on your Android phone/emulator.

If you don't have an active Google account on your device, download the the
[latest APK from the GitHub releases
page](https://github.com/openxc/openxc-android/releases){:target="_blank"}. The green button links
to the APK file that can be installed on your Android device. Make sure you have
"Allow apps from unofficial sources" checked in your Applications settings.

The Enabler takes care of a lot of boilerplate code, so your app's code can be
simpler. It also includes a basic GUI for most functionality of the Android
library.

<div class="alert alert-danger">
<strong>Note:</strong> Even if you only plan to use previously recorded trace
files and don't need to connect to a physical vehicle interface, the Enabler app
still must be installed.
</div>

The Enabler also has views that allow you to:

* Display all received simple vehicle messages from the VI.
* Display all received low-level CAN messages from the VI, if that
    functionality is enabled in the firmware.
* Send an arbitrary CAN message to the vehicle through the VI (requires firmware
    that supports this feature).
* Send a diagnostic request to the vehicle through the VI.

It's a fairly basic UI, so consider these proof of concept features. Everything
they do is available via the library's API.

## Program the Vehicle Interface

If you haven't done so already, visit the [VI firmware page](/vehicle-interface/firmware.html) to find the
right firmware for your VI and to learn how to re-program it.

If you plan only to use pre-recorded vehicle data trace files instead of a
physical vehicle interface, you can skip this step.

## Obtaining real vehicle data from VI

<ol>
<li>Plug the vehicle interface into the OBD-II port in your car - it will be
somewhere below the steering wheel, possibly behind a door. It should light up
blue if it's plugged in all the way and the car is running.</li>

<li>Run the OpenXC Enabler app, hit the <code>Search for Bluetooth VI</code>
button and wait a moment. Within a minute, it should detect your Bluetooth VI
and prompt to pair. If it asks for a PIN, use <code>1234</code>.
<br/>
(<a class="extra-screenshots-controls" href="#extra-inactive-enabler-screenshots">show me</a>)

<div class="extra-screenshots" id="extra-inactive-enabler-screenshots">
<img title="OpenXC Enabler App" alt="Enabler disconnected" src="/images/test-screenshots/enabler-disconnected.png"/>
<img title="OpenXC Enabler App" alt="Enabler pairing" src="/images/test-screenshots/enabler-pairing.png"/>
</div>

</li>

<li>If your VI is plugged into a running vehicle, after a few seconds it will
open a connection and start receiving vehicle data. You should see a Bluetooth
icon appear next to "Active Connections" and the "Messages Received" number
should be increasing.
<br/>
(<a class="extra-screenshots-controls" href="#extra-active-enabler-screenshots">show me</a>)

<div class="extra-screenshots" id="extra-active-enabler-screenshots">
<img title="OpenXC Enabler App" alt="Enabler connected" src="/images/test-screenshots/enabler-connected.png"/>
</div>
</li>

<li>Swipe to the left to see the list of messages being received from the VI.
<br/>
<img title="OpenXC Enabler App" alt="Enabler dashboard" src="/images/test-screenshots/dashboard.png"/>
</li>
</ol>

<div class="page-header">
<h2>Next Steps</h2>
</div>

You can now [install the OpenXC Android
library](/android/library-installation.html){:target="_blank"} and get started creating
your first app. Make sure you installed the Enabler!

[enabler-source]: https://github.com/openxc/openxc-android/tree/master/enabler
