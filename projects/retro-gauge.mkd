---
layout: project
title: Retro Gauge - OpenXC
redirect_from:
    - /hardware-addons/retro-gauge.html
    - /hardware/retro-gauge.html
---

<div class="page-header">
    <h1>Retro Gauge</h1>
</div>

**Documentation and Assembly Lab:** [retro-gauge-lab.openxcplatform.com](http://retro-gauge-lab.openxcplatform.com/index.html){:target="_blank"}

![Retro Gauge](/projects/images/retro-gauge/overview.jpg)

The Retro Gauge is a mechanical vehicle gauge that displays data received over a
serial communication line. One possible use of the gauge is to display vehicle
data from the [OpenXC platform][openxc].

The design intent was to keep the gauge as open and accessible as possible so
that the community could contribute and benefit from the design.

<div class="page-header">
    <h2 id="repositories"><a href="#repositories">Repositories</a></h2>
</div>

This project is contained in four different GitHub repositories:

**Mechanical Enclosure Design** - The
[retro-gauge-enclosure](http://github.com/openxc-retro-gauge/retro-gauge-enclosure){:target="_blank"}
repository contains .STL and STEP files for the 3D printable gauge housing.

**Hardware** - The
[retro-gauge-hardware](http://github.com/openxc-retro-gauge/retro-gauge-hardware){:target="_blank"}
repository contains Eagle schematics and PCB layouts for the gauge's embedded
hardware.

**Firmware** - The
[retro-gauge-firmware](http://github.com/openxc-retro-gauge/retro-gauge-firmware){:target="_blank"}
repository contains Arduino source code to run on the Retro Gauge.

**Android** - The
[retro-gauge-android](http://github.com/openxc-retro-gauge/retro-gauge-android){:target="_blank"}
repository contains an Android application to control the gauge with vehicle
data from the [OpenXC platform][openxc].

<div class="page-header">
    <h2>Motivation</h2>
</div>

The Retro Gauge was created as an alternative to aftermarket gauges on the
market. When we looked at what a lot of hobbyists and car enthusiasts were doing
with their cars, we realized that aftermarket gauges were quite popular.
However, these gauges were both expensive and required the installation of
additional sensors, which was both timely and sometimes very technical. We
decided to design a mechanical vehicle gauge that had the same form factor as
existing gauges so that it would fit in existing gauge mounts. We also wanted to
design a gauge that had the same feel and aesthetics as aftermarket gauges.

<div class="page-header">
    <h2>PCB Design</h2>
</div>

The design intent for the PCB was to allow developers to use common open source
tools that are readily available to allow the gauge to be easily expanded. With
this in mind, an <a href="http://arduino.cc/en/Main/ArduinoBoardProMini">Arduino
Pro Mini</a> was designed to easily fit into the board and a 6-pin header was
added to allow the board to easily be flashed. A 2-digit 7 segment display was
added to output the value of the desired signal as well as 2 RGB LEDs for
aesthetics and visual signaling. The RGB value is digitally controlled using a
Hue spectrum input (<a target="_blank" href="http://en.wikipedia.org/wiki/Hue">Hue Wiki</a>).

![Retro Gauge PCB](/projects/images/retro-gauge/pcb.jpg)

<div class="page-header">
    <h2>Hardware Design</h2>
</div>

The hardware was designed so that it would fit into existing 3" aftermarket
gauge mounts. In order to make installation as easy as possibly, only one port
was added, a mini USB, to provide both power and data. It was also designed so
that the gauge face could easily be swapped out to display different data types.

![Hardware design](/projects/images/retro-gauge/hardware.jpg)

There are 3 main manufactures for small stepper motors that are most commonly
used in automotive gauges -
[Switec](http://www.jukenswisstech.com/?page_id=97){:target="_blank"},
[VID](http://www.vid.wellgain.com/product.aspx){:target="_blank"}, and
[MCR](http://mcrmotorusa.com/Stepper%20Motors.html){:target="_blank"}.

For this project, the VID 29-07 was used since it was most readily available on
eBay at the time of this project. Guy Carpenter's
[Gaugette](http://guy.carpenter.id.au/gaugette/about/) project has a great
tutorial on how to use and control these stepper motors. Thanks Guy!

[openxc]: /
